//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace MultipleChoiceApp.Bi.Subject {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SubjectServiceSoap", Namespace="http://peteranh.com/Services/Subject")]
    public partial class SubjectService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getAvailableForExamOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchByKeywordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback countAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDetailsByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback addOperationCompleted;
        
        private System.Threading.SendOrPostCallback addManyOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SubjectService() {
            this.Url = global::MultipleChoiceApp.Properties.Settings.Default.MultipleChoiceApp_Bi_Subject_SubjectService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getAvailableForExamCompletedEventHandler getAvailableForExamCompleted;
        
        /// <remarks/>
        public event searchByKeywordCompletedEventHandler searchByKeywordCompleted;
        
        /// <remarks/>
        public event getAllCompletedEventHandler getAllCompleted;
        
        /// <remarks/>
        public event countAllCompletedEventHandler countAllCompleted;
        
        /// <remarks/>
        public event getDetailsByIdCompletedEventHandler getDetailsByIdCompleted;
        
        /// <remarks/>
        public event addCompletedEventHandler addCompleted;
        
        /// <remarks/>
        public event addManyCompletedEventHandler addManyCompleted;
        
        /// <remarks/>
        public event updateCompletedEventHandler updateCompleted;
        
        /// <remarks/>
        public event deleteCompletedEventHandler deleteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://peteranh.com/Services/Subject/getAvailableForExam", RequestNamespace="http://peteranh.com/Services/Subject", ResponseNamespace="http://peteranh.com/Services/Subject", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Subject[] getAvailableForExam(System.DateTime d) {
            object[] results = this.Invoke("getAvailableForExam", new object[] {
                        d});
            return ((Subject[])(results[0]));
        }
        
        /// <remarks/>
        public void getAvailableForExamAsync(System.DateTime d) {
            this.getAvailableForExamAsync(d, null);
        }
        
        /// <remarks/>
        public void getAvailableForExamAsync(System.DateTime d, object userState) {
            if ((this.getAvailableForExamOperationCompleted == null)) {
                this.getAvailableForExamOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAvailableForExamOperationCompleted);
            }
            this.InvokeAsync("getAvailableForExam", new object[] {
                        d}, this.getAvailableForExamOperationCompleted, userState);
        }
        
        private void OngetAvailableForExamOperationCompleted(object arg) {
            if ((this.getAvailableForExamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAvailableForExamCompleted(this, new getAvailableForExamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://peteranh.com/Services/Subject/searchByKeyword", RequestNamespace="http://peteranh.com/Services/Subject", ResponseNamespace="http://peteranh.com/Services/Subject", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Subject[] searchByKeyword(string keyword) {
            object[] results = this.Invoke("searchByKeyword", new object[] {
                        keyword});
            return ((Subject[])(results[0]));
        }
        
        /// <remarks/>
        public void searchByKeywordAsync(string keyword) {
            this.searchByKeywordAsync(keyword, null);
        }
        
        /// <remarks/>
        public void searchByKeywordAsync(string keyword, object userState) {
            if ((this.searchByKeywordOperationCompleted == null)) {
                this.searchByKeywordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchByKeywordOperationCompleted);
            }
            this.InvokeAsync("searchByKeyword", new object[] {
                        keyword}, this.searchByKeywordOperationCompleted, userState);
        }
        
        private void OnsearchByKeywordOperationCompleted(object arg) {
            if ((this.searchByKeywordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchByKeywordCompleted(this, new searchByKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://peteranh.com/Services/Subject/getAll", RequestNamespace="http://peteranh.com/Services/Subject", ResponseNamespace="http://peteranh.com/Services/Subject", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Subject[] getAll(int itemsPerPage, int currentPage) {
            object[] results = this.Invoke("getAll", new object[] {
                        itemsPerPage,
                        currentPage});
            return ((Subject[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllAsync(int itemsPerPage, int currentPage) {
            this.getAllAsync(itemsPerPage, currentPage, null);
        }
        
        /// <remarks/>
        public void getAllAsync(int itemsPerPage, int currentPage, object userState) {
            if ((this.getAllOperationCompleted == null)) {
                this.getAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllOperationCompleted);
            }
            this.InvokeAsync("getAll", new object[] {
                        itemsPerPage,
                        currentPage}, this.getAllOperationCompleted, userState);
        }
        
        private void OngetAllOperationCompleted(object arg) {
            if ((this.getAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllCompleted(this, new getAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://peteranh.com/Services/Subject/countAll", RequestNamespace="http://peteranh.com/Services/Subject", ResponseNamespace="http://peteranh.com/Services/Subject", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int countAll() {
            object[] results = this.Invoke("countAll", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void countAllAsync() {
            this.countAllAsync(null);
        }
        
        /// <remarks/>
        public void countAllAsync(object userState) {
            if ((this.countAllOperationCompleted == null)) {
                this.countAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OncountAllOperationCompleted);
            }
            this.InvokeAsync("countAll", new object[0], this.countAllOperationCompleted, userState);
        }
        
        private void OncountAllOperationCompleted(object arg) {
            if ((this.countAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.countAllCompleted(this, new countAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://peteranh.com/Services/Subject/getDetailsById", RequestNamespace="http://peteranh.com/Services/Subject", ResponseNamespace="http://peteranh.com/Services/Subject", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Subject getDetailsById(int id) {
            object[] results = this.Invoke("getDetailsById", new object[] {
                        id});
            return ((Subject)(results[0]));
        }
        
        /// <remarks/>
        public void getDetailsByIdAsync(int id) {
            this.getDetailsByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void getDetailsByIdAsync(int id, object userState) {
            if ((this.getDetailsByIdOperationCompleted == null)) {
                this.getDetailsByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDetailsByIdOperationCompleted);
            }
            this.InvokeAsync("getDetailsById", new object[] {
                        id}, this.getDetailsByIdOperationCompleted, userState);
        }
        
        private void OngetDetailsByIdOperationCompleted(object arg) {
            if ((this.getDetailsByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDetailsByIdCompleted(this, new getDetailsByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://peteranh.com/Services/Subject/add", RequestNamespace="http://peteranh.com/Services/Subject", ResponseNamespace="http://peteranh.com/Services/Subject", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool add(Subject item) {
            object[] results = this.Invoke("add", new object[] {
                        item});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void addAsync(Subject item) {
            this.addAsync(item, null);
        }
        
        /// <remarks/>
        public void addAsync(Subject item, object userState) {
            if ((this.addOperationCompleted == null)) {
                this.addOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddOperationCompleted);
            }
            this.InvokeAsync("add", new object[] {
                        item}, this.addOperationCompleted, userState);
        }
        
        private void OnaddOperationCompleted(object arg) {
            if ((this.addCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCompleted(this, new addCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://peteranh.com/Services/Subject/addMany", RequestNamespace="http://peteranh.com/Services/Subject", ResponseNamespace="http://peteranh.com/Services/Subject", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int addMany(Subject[] list) {
            object[] results = this.Invoke("addMany", new object[] {
                        list});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addManyAsync(Subject[] list) {
            this.addManyAsync(list, null);
        }
        
        /// <remarks/>
        public void addManyAsync(Subject[] list, object userState) {
            if ((this.addManyOperationCompleted == null)) {
                this.addManyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddManyOperationCompleted);
            }
            this.InvokeAsync("addMany", new object[] {
                        list}, this.addManyOperationCompleted, userState);
        }
        
        private void OnaddManyOperationCompleted(object arg) {
            if ((this.addManyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addManyCompleted(this, new addManyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://peteranh.com/Services/Subject/update", RequestNamespace="http://peteranh.com/Services/Subject", ResponseNamespace="http://peteranh.com/Services/Subject", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool update(Subject item) {
            object[] results = this.Invoke("update", new object[] {
                        item});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateAsync(Subject item) {
            this.updateAsync(item, null);
        }
        
        /// <remarks/>
        public void updateAsync(Subject item, object userState) {
            if ((this.updateOperationCompleted == null)) {
                this.updateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateOperationCompleted);
            }
            this.InvokeAsync("update", new object[] {
                        item}, this.updateOperationCompleted, userState);
        }
        
        private void OnupdateOperationCompleted(object arg) {
            if ((this.updateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCompleted(this, new updateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://peteranh.com/Services/Subject/delete", RequestNamespace="http://peteranh.com/Services/Subject", ResponseNamespace="http://peteranh.com/Services/Subject", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool delete(int id) {
            object[] results = this.Invoke("delete", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAsync(int id) {
            this.deleteAsync(id, null);
        }
        
        /// <remarks/>
        public void deleteAsync(int id, object userState) {
            if ((this.deleteOperationCompleted == null)) {
                this.deleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOperationCompleted);
            }
            this.InvokeAsync("delete", new object[] {
                        id}, this.deleteOperationCompleted, userState);
        }
        
        private void OndeleteOperationCompleted(object arg) {
            if ((this.deleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCompleted(this, new deleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://peteranh.com/Services/Subject")]
    public partial class Subject {
        
        private int idField;
        
        private string codeField;
        
        private string nameField;
        
        private int totalQuestionField;
        
        private int durationField;
        
        private string lecturerField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int TotalQuestion {
            get {
                return this.totalQuestionField;
            }
            set {
                this.totalQuestionField = value;
            }
        }
        
        /// <remarks/>
        public int Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public string Lecturer {
            get {
                return this.lecturerField;
            }
            set {
                this.lecturerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getAvailableForExamCompletedEventHandler(object sender, getAvailableForExamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAvailableForExamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAvailableForExamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Subject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Subject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void searchByKeywordCompletedEventHandler(object sender, searchByKeywordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchByKeywordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchByKeywordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Subject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Subject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getAllCompletedEventHandler(object sender, getAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Subject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Subject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void countAllCompletedEventHandler(object sender, countAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class countAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal countAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getDetailsByIdCompletedEventHandler(object sender, getDetailsByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDetailsByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDetailsByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Subject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Subject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void addCompletedEventHandler(object sender, addCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void addManyCompletedEventHandler(object sender, addManyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addManyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addManyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void updateCompletedEventHandler(object sender, updateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteCompletedEventHandler(object sender, deleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591